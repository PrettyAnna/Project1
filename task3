import numpy as np


def f(x):
    return np.sin(100 * x) * np.exp(-x ** 2) * np.cos(2 * x)


n = 20000


def trap_met(n):
    sumi = 0
    xes = np.linspace(0, 3, n)
    for i in range(len(xes) - 1):
        sumi += ((f(xes[i]) + f(xes[i + 1])) / 2) * (xes[i + 1] - xes[i])

    return sumi


print((trap_met(1000) - 0.01)*100)
print((trap_met(2000) - 0.01)*100)
print((trap_met(4000) - 0.01)*100)
print((trap_met(8000) - 0.01)*100)
print((trap_met(16000) - 0.01)*100)
print((trap_met(32000) - 0.01)*100)
print((trap_met(64000) - 0.01)*100)
